{"version":3,"sources":["deps/phoenix/web/static/js/phoenix.js","deps/phoenix_html/web/static/js/phoenix_html.js","web/static/js/app.js","web/static/js/socket.js"],"names":["VSN","SOCKET_STATES","connecting","open","closing","closed","DEFAULT_TIMEOUT","CHANNEL_STATES","errored","joined","joining","CHANNEL_EVENTS","close","error","join","reply","leave","TRANSPORTS","longpoll","websocket","Push","channel","event","payload","timeout","receivedResp","timeoutTimer","recHooks","sent","cancelRefEvent","ref","refEvent","send","hasReceived","startTimeout","socket","push","topic","status","callback","response","filter","h","forEach","off","clearTimeout","makeRef","replyEventName","on","cancelTimeout","matchReceive","setTimeout","trigger","Channel","params","state","bindings","joinedOnce","joinPush","pushBuffer","rejoinTimer","Timer","rejoinUntilConnected","reconnectAfterMs","receive","reset","pushEvent","onClose","log","remove","onError","reason","scheduleTimeout","isConnected","rejoin","bind","canPush","leavePush","resend","sendJoin","triggerEvent","onMessage","map","Socket","endPoint","opts","stateChangeCallbacks","message","channels","sendBuffer","transport","window","WebSocket","LongPoll","heartbeatIntervalMs","tries","logger","longpollerTimeout","reconnectTimer","disconnect","connect","location","protocol","match","uri","Ajax","appendParams","vsn","charAt","host","code","conn","onclose","console","endPointURL","onopen","onConnOpen","onerror","onConnError","onmessage","onConnMessage","onConnClose","kind","msg","data","prototype","flushSendBuffer","skipHeartbeat","clearInterval","heartbeatTimer","setInterval","sendHeartbeat","triggerChanError","readyState","connectionState","c","isMember","chanParams","chan","JSON","stringify","newRef","toString","length","rawMessage","parse","token","pollEndpoint","normalizeEndpoint","poll","replace","RegExp","closeAndRetry","request","endpointURL","ontimeout","resp","messages","body","method","accept","XDomainRequest","req","xdomainRequest","XMLHttpRequest","ActiveXObject","xhrRequest","onload","parseJSON","responseText","onprogress","setRequestHeader","onreadystatechange","states","complete","obj","parentKey","queryStr","key","hasOwnProperty","paramKey","paramVal","serialize","encodeURIComponent","url","Object","keys","prefix","timerCalc","timer","isLinkToSubmitParent","element","isLinkTag","tagName","shouldSubmitParent","getAttribute","didHandleSubmitLinkClick","confirm","parentNode","submit","addEventListener","target","preventDefault","userToken","getByClass","css","document","getElementsByClassName","getElementById","velocity","radius","ev","textContent","sensors","battery_capacity","battery_charge","setAttribute","bumper_left","bumper_right","light_bumper_left","light_bumper_left_front","light_bumper_left_center","light_bumper_right","light_bumper_right_front","light_bumper_right_center","position","x","toFixed","y","heading"],"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","file":"priv/static/js/app.js","sourcesContent":["// Phoenix Channels JavaScript client\n//\n// ## Socket Connection\n//\n// A single connection is established to the server and\n// channels are mulitplexed over the connection.\n// Connect to the server using the `Socket` class:\n//\n//     let socket = new Socket(\"/ws\", {params: {userToken: \"123\"}})\n//     socket.connect()\n//\n// The `Socket` constructor takes the mount point of the socket,\n// the authentication params, as well as options that can be found in\n// the Socket docs, such as configuring the `LongPoll` transport, and\n// heartbeat.\n//\n// ## Channels\n//\n// Channels are isolated, concurrent processes on the server that\n// subscribe to topics and broker events between the client and server.\n// To join a channel, you must provide the topic, and channel params for\n// authorization. Here's an example chat room example where `\"new_msg\"`\n// events are listened for, messages are pushed to the server, and\n// the channel is joined with ok/error/timeout matches:\n//\n//     let channel = socket.channel(\"rooms:123\", {token: roomToken})\n//     channel.on(\"new_msg\", msg => console.log(\"Got message\", msg) )\n//     $input.onEnter( e => {\n//       channel.push(\"new_msg\", {body: e.target.val}, 10000)\n//        .receive(\"ok\", (msg) => console.log(\"created message\", msg) )\n//        .receive(\"error\", (reasons) => console.log(\"create failed\", reasons) )\n//        .receive(\"timeout\", () => console.log(\"Networking issue...\") )\n//     })\n//     channel.join()\n//       .receive(\"ok\", ({messages}) => console.log(\"catching up\", messages) )\n//       .receive(\"error\", ({reason}) => console.log(\"failed join\", reason) )\n//       .receive(\"timeout\", () => console.log(\"Networking issue. Still waiting...\") )\n//\n//\n// ## Joining\n//\n// Creating a channel with `socket.channel(topic, params)`, binds the params to\n// `channel.params`, which are sent up on `channel.join()`.\n// Subsequent rejoins will send up the modified params for\n// updating authorization params, or passing up last_message_id information.\n// Successful joins receive an \"ok\" status, while unsuccessful joins\n// receive \"error\".\n//\n//\n// ## Pushing Messages\n//\n// From the previous example, we can see that pushing messages to the server\n// can be done with `channel.push(eventName, payload)` and we can optionally\n// receive responses from the push. Additionally, we can use\n// `receive(\"timeout\", callback)` to abort waiting for our other `receive` hooks\n//  and take action after some period of waiting. The default timeout is 5000ms.\n//\n//\n// ## Socket Hooks\n//\n// Lifecycle events of the multiplexed connection can be hooked into via\n// `socket.onError()` and `socket.onClose()` events, ie:\n//\n//     socket.onError( () => console.log(\"there was an error with the connection!\") )\n//     socket.onClose( () => console.log(\"the connection dropped\") )\n//\n//\n// ## Channel Hooks\n//\n// For each joined channel, you can bind to `onError` and `onClose` events\n// to monitor the channel lifecycle, ie:\n//\n//     channel.onError( () => console.log(\"there was an error!\") )\n//     channel.onClose( () => console.log(\"the channel has gone away gracefully\") )\n//\n// ### onError hooks\n//\n// `onError` hooks are invoked if the socket connection drops, or the channel\n// crashes on the server. In either case, a channel rejoin is attemtped\n// automatically in an exponential backoff manner.\n//\n// ### onClose hooks\n//\n// `onClose` hooks are invoked only in two cases. 1) the channel explicitly\n// closed on the server, or 2). The client explicitly closed, by calling\n// `channel.leave()`\n//\n\nconst VSN = \"1.0.0\"\nconst SOCKET_STATES = {connecting: 0, open: 1, closing: 2, closed: 3}\nconst DEFAULT_TIMEOUT = 10000\nconst CHANNEL_STATES = {\n  closed: \"closed\",\n  errored: \"errored\",\n  joined: \"joined\",\n  joining: \"joining\",\n}\nconst CHANNEL_EVENTS = {\n  close: \"phx_close\",\n  error: \"phx_error\",\n  join: \"phx_join\",\n  reply: \"phx_reply\",\n  leave: \"phx_leave\"\n}\nconst TRANSPORTS = {\n  longpoll: \"longpoll\",\n  websocket: \"websocket\"\n}\n\nclass Push {\n\n  // Initializes the Push\n  //\n  // channel - The Channel\n  // event - The event, for example `\"phx_join\"`\n  // payload - The payload, for example `{user_id: 123}`\n  // timeout - The push timeout in milliseconds\n  //\n  constructor(channel, event, payload, timeout){\n    this.channel      = channel\n    this.event        = event\n    this.payload      = payload || {}\n    this.receivedResp = null\n    this.timeout      = timeout\n    this.timeoutTimer = null\n    this.recHooks     = []\n    this.sent         = false\n  }\n\n  resend(timeout){\n    this.timeout = timeout\n    this.cancelRefEvent()\n    this.ref          = null\n    this.refEvent     = null\n    this.receivedResp = null\n    this.sent         = false\n    this.send()\n  }\n\n  send(){ if(this.hasReceived(\"timeout\")){ return }\n    this.startTimeout()\n    this.sent = true\n    this.channel.socket.push({\n      topic: this.channel.topic,\n      event: this.event,\n      payload: this.payload,\n      ref: this.ref\n    })\n  }\n\n  receive(status, callback){\n    if(this.hasReceived(status)){\n      callback(this.receivedResp.response)\n    }\n\n    this.recHooks.push({status, callback})\n    return this\n  }\n\n\n  // private\n\n  matchReceive({status, response, ref}){\n    this.recHooks.filter( h => h.status === status )\n                 .forEach( h => h.callback(response) )\n  }\n\n  cancelRefEvent(){ if(!this.refEvent){ return }\n    this.channel.off(this.refEvent)\n  }\n\n  cancelTimeout(){\n    clearTimeout(this.timeoutTimer)\n    this.timeoutTimer = null\n  }\n\n  startTimeout(){ if(this.timeoutTimer){ return }\n    this.ref      = this.channel.socket.makeRef()\n    this.refEvent = this.channel.replyEventName(this.ref)\n\n    this.channel.on(this.refEvent, payload => {\n      this.cancelRefEvent()\n      this.cancelTimeout()\n      this.receivedResp = payload\n      this.matchReceive(payload)\n    })\n\n    this.timeoutTimer = setTimeout(() => {\n      this.trigger(\"timeout\", {})\n    }, this.timeout)\n  }\n\n  hasReceived(status){\n    return this.receivedResp && this.receivedResp.status === status\n  }\n\n  trigger(status, response){\n    this.channel.trigger(this.refEvent, {status, response})\n  }\n}\n\nexport class Channel {\n  constructor(topic, params, socket) {\n    this.state       = CHANNEL_STATES.closed\n    this.topic       = topic\n    this.params      = params || {}\n    this.socket      = socket\n    this.bindings    = []\n    this.timeout     = this.socket.timeout\n    this.joinedOnce  = false\n    this.joinPush    = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout)\n    this.pushBuffer  = []\n    this.rejoinTimer  = new Timer(\n      () => this.rejoinUntilConnected(),\n      this.socket.reconnectAfterMs\n    )\n    this.joinPush.receive(\"ok\", () => {\n      this.state = CHANNEL_STATES.joined\n      this.rejoinTimer.reset()\n      this.pushBuffer.forEach( pushEvent => pushEvent.send() )\n      this.pushBuffer = []\n    })\n    this.onClose( () => {\n      this.socket.log(\"channel\", `close ${this.topic}`)\n      this.state = CHANNEL_STATES.closed\n      this.socket.remove(this)\n    })\n    this.onError( reason => {\n      this.socket.log(\"channel\", `error ${this.topic}`, reason)\n      this.state = CHANNEL_STATES.errored\n      this.rejoinTimer.scheduleTimeout()\n    })\n    this.joinPush.receive(\"timeout\", () => {\n      if(this.state !== CHANNEL_STATES.joining){ return }\n\n      this.socket.log(\"channel\", `timeout ${this.topic}`, this.joinPush.timeout)\n      this.state = CHANNEL_STATES.errored\n      this.rejoinTimer.scheduleTimeout()\n    })\n    this.on(CHANNEL_EVENTS.reply, (payload, ref) => {\n      this.trigger(this.replyEventName(ref), payload)\n    })\n  }\n\n  rejoinUntilConnected(){\n    this.rejoinTimer.scheduleTimeout()\n    if(this.socket.isConnected()){\n      this.rejoin()\n    }\n  }\n\n  join(timeout = this.timeout){\n    if(this.joinedOnce){\n      throw(`tried to join multiple times. 'join' can only be called a single time per channel instance`)\n    } else {\n      this.joinedOnce = true\n    }\n    this.rejoin(timeout)\n    return this.joinPush\n  }\n\n  onClose(callback){ this.on(CHANNEL_EVENTS.close, callback) }\n\n  onError(callback){\n    this.on(CHANNEL_EVENTS.error, reason => callback(reason) )\n  }\n\n  on(event, callback){ this.bindings.push({event, callback}) }\n\n  off(event){ this.bindings = this.bindings.filter( bind => bind.event !== event ) }\n\n  canPush(){ return this.socket.isConnected() && this.state === CHANNEL_STATES.joined }\n\n  push(event, payload, timeout = this.timeout){\n    if(!this.joinedOnce){\n      throw(`tried to push '${event}' to '${this.topic}' before joining. Use channel.join() before pushing events`)\n    }\n    let pushEvent = new Push(this, event, payload, timeout)\n    if(this.canPush()){\n      pushEvent.send()\n    } else {\n      pushEvent.startTimeout()\n      this.pushBuffer.push(pushEvent)\n    }\n\n    return pushEvent\n  }\n\n  // Leaves the channel\n  //\n  // Unsubscribes from server events, and\n  // instructs channel to terminate on server\n  //\n  // Triggers onClose() hooks\n  //\n  // To receive leave acknowledgements, use the a `receive`\n  // hook to bind to the server ack, ie:\n  //\n  //     channel.leave().receive(\"ok\", () => alert(\"left!\") )\n  //\n  leave(timeout = this.timeout){\n    let onClose = () => {\n      this.socket.log(\"channel\", `leave ${this.topic}`)\n      this.trigger(CHANNEL_EVENTS.close, \"leave\")\n    }\n    let leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout)\n    leavePush.receive(\"ok\", () => onClose() )\n             .receive(\"timeout\", () => onClose() )\n    leavePush.send()\n    if(!this.canPush()){ leavePush.trigger(\"ok\", {}) }\n\n    return leavePush\n  }\n\n  // Overridable message hook\n  //\n  // Receives all events for specialized message handling\n  onMessage(event, payload, ref){}\n\n  // private\n\n  isMember(topic){ return this.topic === topic }\n\n  sendJoin(timeout){\n    this.state = CHANNEL_STATES.joining\n    this.joinPush.resend(timeout)\n  }\n\n  rejoin(timeout = this.timeout){ this.sendJoin(timeout) }\n\n  trigger(triggerEvent, payload, ref){\n    this.onMessage(triggerEvent, payload, ref)\n    this.bindings.filter( bind => bind.event === triggerEvent )\n                 .map( bind => bind.callback(payload, ref) )\n  }\n\n  replyEventName(ref){ return `chan_reply_${ref}` }\n}\n\nexport class Socket {\n\n  // Initializes the Socket\n  //\n  // endPoint - The string WebSocket endpoint, ie, \"ws://example.com/ws\",\n  //                                               \"wss://example.com\"\n  //                                               \"/ws\" (inherited host & protocol)\n  // opts - Optional configuration\n  //   transport - The Websocket Transport, for example WebSocket or Phoenix.LongPoll.\n  //               Defaults to WebSocket with automatic LongPoll fallback.\n  //   timeout - The default timeout in milliseconds to trigger push timeouts.\n  //             Defaults `DEFAULT_TIMEOUT`\n  //   heartbeatIntervalMs - The millisec interval to send a heartbeat message\n  //   reconnectAfterMs - The optional function that returns the millsec\n  //                      reconnect interval. Defaults to stepped backoff of:\n  //\n  //     function(tries){\n  //       return [1000, 5000, 10000][tries - 1] || 10000\n  //     }\n  //\n  //   logger - The optional function for specialized logging, ie:\n  //     `logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n  //\n  //   longpollerTimeout - The maximum timeout of a long poll AJAX request.\n  //                        Defaults to 20s (double the server long poll timer).\n  //\n  //   params - The optional params to pass when connecting\n  //\n  // For IE8 support use an ES5-shim (https://github.com/es-shims/es5-shim)\n  //\n  constructor(endPoint, opts = {}){\n    this.stateChangeCallbacks = {open: [], close: [], error: [], message: []}\n    this.channels             = []\n    this.sendBuffer           = []\n    this.ref                  = 0\n    this.timeout              = opts.timeout || DEFAULT_TIMEOUT\n    this.transport            = opts.transport || window.WebSocket || LongPoll\n    this.heartbeatIntervalMs  = opts.heartbeatIntervalMs || 30000\n    this.reconnectAfterMs     = opts.reconnectAfterMs || function(tries){\n      return [1000, 2000, 5000, 10000][tries - 1] || 10000\n    }\n    this.logger               = opts.logger || function(){} // noop\n    this.longpollerTimeout    = opts.longpollerTimeout || 20000\n    this.params               = opts.params || {}\n    this.endPoint             = `${endPoint}/${TRANSPORTS.websocket}`\n    this.reconnectTimer       = new Timer(() => {\n      this.disconnect(() => this.connect())\n    }, this.reconnectAfterMs)\n  }\n\n  protocol(){ return location.protocol.match(/^https/) ? \"wss\" : \"ws\" }\n\n  endPointURL(){\n    let uri = Ajax.appendParams(\n      Ajax.appendParams(this.endPoint, this.params), {vsn: VSN})\n    if(uri.charAt(0) !== \"/\"){ return uri }\n    if(uri.charAt(1) === \"/\"){ return `${this.protocol()}:${uri}` }\n\n    return `${this.protocol()}://${location.host}${uri}`\n  }\n\n  disconnect(callback, code, reason){\n    if(this.conn){\n      this.conn.onclose = function(){} // noop\n      if(code){ this.conn.close(code, reason || \"\") } else { this.conn.close() }\n      this.conn = null\n    }\n    callback && callback()\n  }\n\n  // params - The params to send when connecting, for example `{user_id: userToken}`\n  connect(params){\n    if(params){\n      console && console.log(\"passing params to connect is deprecated. Instead pass :params to the Socket constructor\")\n      this.params = params\n    }\n    if(this.conn){ return }\n\n    this.conn = new this.transport(this.endPointURL())\n    this.conn.timeout   = this.longpollerTimeout\n    this.conn.onopen    = () => this.onConnOpen()\n    this.conn.onerror   = error => this.onConnError(error)\n    this.conn.onmessage = event => this.onConnMessage(event)\n    this.conn.onclose   = event => this.onConnClose(event)\n  }\n\n  // Logs the message. Override `this.logger` for specialized logging. noops by default\n  log(kind, msg, data){ this.logger(kind, msg, data) }\n\n  // Registers callbacks for connection state change events\n  //\n  // Examples\n  //\n  //    socket.onError(function(error){ alert(\"An error occurred\") })\n  //\n  onOpen     (callback){ this.stateChangeCallbacks.open.push(callback) }\n  onClose    (callback){ this.stateChangeCallbacks.close.push(callback) }\n  onError    (callback){ this.stateChangeCallbacks.error.push(callback) }\n  onMessage  (callback){ this.stateChangeCallbacks.message.push(callback) }\n\n  onConnOpen(){\n    this.log(\"transport\", `connected to ${this.endPointURL()}`, this.transport.prototype)\n    this.flushSendBuffer()\n    this.reconnectTimer.reset()\n    if(!this.conn.skipHeartbeat){\n      clearInterval(this.heartbeatTimer)\n      this.heartbeatTimer = setInterval(() => this.sendHeartbeat(), this.heartbeatIntervalMs)\n    }\n    this.stateChangeCallbacks.open.forEach( callback => callback() )\n  }\n\n  onConnClose(event){\n    this.log(\"transport\", \"close\", event)\n    this.triggerChanError()\n    clearInterval(this.heartbeatTimer)\n    this.reconnectTimer.scheduleTimeout()\n    this.stateChangeCallbacks.close.forEach( callback => callback(event) )\n  }\n\n  onConnError(error){\n    this.log(\"transport\", error)\n    this.triggerChanError()\n    this.stateChangeCallbacks.error.forEach( callback => callback(error) )\n  }\n\n  triggerChanError(){\n    this.channels.forEach( channel => channel.trigger(CHANNEL_EVENTS.error) )\n  }\n\n  connectionState(){\n    switch(this.conn && this.conn.readyState){\n      case SOCKET_STATES.connecting: return \"connecting\"\n      case SOCKET_STATES.open:       return \"open\"\n      case SOCKET_STATES.closing:    return \"closing\"\n      default:                       return \"closed\"\n    }\n  }\n\n  isConnected(){ return this.connectionState() === \"open\" }\n\n  remove(channel){\n    this.channels = this.channels.filter( c => !c.isMember(channel.topic) )\n  }\n\n  channel(topic, chanParams = {}){\n    let chan = new Channel(topic, chanParams, this)\n    this.channels.push(chan)\n    return chan\n  }\n\n  push(data){\n    let {topic, event, payload, ref} = data\n    let callback = () => this.conn.send(JSON.stringify(data))\n    this.log(\"push\", `${topic} ${event} (${ref})`, payload)\n    if(this.isConnected()){\n      callback()\n    }\n    else {\n      this.sendBuffer.push(callback)\n    }\n  }\n\n  // Return the next message ref, accounting for overflows\n  makeRef(){\n    let newRef = this.ref + 1\n    if(newRef === this.ref){ this.ref = 0 } else { this.ref = newRef }\n\n    return this.ref.toString()\n  }\n\n  sendHeartbeat(){ if(!this.isConnected()){ return }\n    this.push({topic: \"phoenix\", event: \"heartbeat\", payload: {}, ref: this.makeRef()})\n  }\n\n  flushSendBuffer(){\n    if(this.isConnected() && this.sendBuffer.length > 0){\n      this.sendBuffer.forEach( callback => callback() )\n      this.sendBuffer = []\n    }\n  }\n\n  onConnMessage(rawMessage){\n    let msg = JSON.parse(rawMessage.data)\n    let {topic, event, payload, ref} = msg\n    this.log(\"receive\", `${payload.status || \"\"} ${topic} ${event} ${ref && \"(\" + ref + \")\" || \"\"}`, payload)\n    this.channels.filter( channel => channel.isMember(topic) )\n                 .forEach( channel => channel.trigger(event, payload, ref) )\n    this.stateChangeCallbacks.message.forEach( callback => callback(msg) )\n  }\n}\n\n\nexport class LongPoll {\n\n  constructor(endPoint){\n    this.endPoint        = null\n    this.token           = null\n    this.skipHeartbeat   = true\n    this.onopen          = function(){} // noop\n    this.onerror         = function(){} // noop\n    this.onmessage       = function(){} // noop\n    this.onclose         = function(){} // noop\n    this.pollEndpoint    = this.normalizeEndpoint(endPoint)\n    this.readyState      = SOCKET_STATES.connecting\n\n    this.poll()\n  }\n\n  normalizeEndpoint(endPoint){\n    return(endPoint\n      .replace(\"ws://\", \"http://\")\n      .replace(\"wss://\", \"https://\")\n      .replace(new RegExp(\"(.*)\\/\" + TRANSPORTS.websocket), \"$1/\" + TRANSPORTS.longpoll))\n  }\n\n  endpointURL(){\n    return Ajax.appendParams(this.pollEndpoint, {token: this.token})\n  }\n\n  closeAndRetry(){\n    this.close()\n    this.readyState = SOCKET_STATES.connecting\n  }\n\n  ontimeout(){\n    this.onerror(\"timeout\")\n    this.closeAndRetry()\n  }\n\n  poll(){\n    if(!(this.readyState === SOCKET_STATES.open || this.readyState === SOCKET_STATES.connecting)){ return }\n\n    Ajax.request(\"GET\", this.endpointURL(), \"application/json\", null, this.timeout, this.ontimeout.bind(this), (resp) => {\n      if(resp){\n        var {status, token, messages} = resp\n        this.token = token\n      } else{\n        var status = 0\n      }\n\n      switch(status){\n        case 200:\n          messages.forEach( msg => this.onmessage({data: JSON.stringify(msg)}) )\n          this.poll()\n          break\n        case 204:\n          this.poll()\n          break\n        case 410:\n          this.readyState = SOCKET_STATES.open\n          this.onopen()\n          this.poll()\n          break\n        case 0:\n        case 500:\n          this.onerror()\n          this.closeAndRetry()\n          break\n        default: throw(`unhandled poll status ${status}`)\n      }\n    })\n  }\n\n  send(body){\n    Ajax.request(\"POST\", this.endpointURL(), \"application/json\", body, this.timeout, this.onerror.bind(this, \"timeout\"), (resp) => {\n      if(!resp || resp.status !== 200){\n        this.onerror(status)\n        this.closeAndRetry()\n      }\n    })\n  }\n\n  close(code, reason){\n    this.readyState = SOCKET_STATES.closed\n    this.onclose()\n  }\n}\n\n\nexport class Ajax {\n\n  static request(method, endPoint, accept, body, timeout, ontimeout, callback){\n    if(window.XDomainRequest){\n      let req = new XDomainRequest() // IE8, IE9\n      this.xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback)\n    } else {\n      let req = window.XMLHttpRequest ?\n                  new XMLHttpRequest() : // IE7+, Firefox, Chrome, Opera, Safari\n                  new ActiveXObject(\"Microsoft.XMLHTTP\") // IE6, IE5\n      this.xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback)\n    }\n  }\n\n  static xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback){\n    req.timeout = timeout\n    req.open(method, endPoint)\n    req.onload = () => {\n      let response = this.parseJSON(req.responseText)\n      callback && callback(response)\n    }\n    if(ontimeout){ req.ontimeout = ontimeout }\n\n    // Work around bug in IE9 that requires an attached onprogress handler\n    req.onprogress = () => {}\n\n    req.send(body)\n  }\n\n  static xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback){\n    req.timeout = timeout\n    req.open(method, endPoint, true)\n    req.setRequestHeader(\"Content-Type\", accept)\n    req.onerror = () => { callback && callback(null) }\n    req.onreadystatechange = () => {\n      if(req.readyState === this.states.complete && callback){\n        let response = this.parseJSON(req.responseText)\n        callback(response)\n      }\n    }\n    if(ontimeout){ req.ontimeout = ontimeout }\n\n    req.send(body)\n  }\n\n  static parseJSON(resp){\n    return (resp && resp !== \"\") ?\n             JSON.parse(resp) :\n             null\n  }\n\n  static serialize(obj, parentKey){\n    let queryStr = [];\n    for(var key in obj){ if(!obj.hasOwnProperty(key)){ continue }\n      let paramKey = parentKey ? `${parentKey}[${key}]` : key\n      let paramVal = obj[key]\n      if(typeof paramVal === \"object\"){\n        queryStr.push(this.serialize(paramVal, paramKey))\n      } else {\n        queryStr.push(encodeURIComponent(paramKey) + \"=\" + encodeURIComponent(paramVal))\n      }\n    }\n    return queryStr.join(\"&\")\n  }\n\n  static appendParams(url, params){\n    if(Object.keys(params).length === 0){ return url }\n\n    let prefix = url.match(/\\?/) ? \"&\" : \"?\"\n    return `${url}${prefix}${this.serialize(params)}`\n  }\n}\n\nAjax.states = {complete: 4}\n\n\n// Creates a timer that accepts a `timerCalc` function to perform\n// calculated timeout retries, such as exponential backoff.\n//\n// ## Examples\n//\n//    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n//      return [1000, 5000, 10000][tries - 1] || 10000\n//    })\n//    reconnectTimer.scheduleTimeout() // fires after 1000\n//    reconnectTimer.scheduleTimeout() // fires after 5000\n//    reconnectTimer.reset()\n//    reconnectTimer.scheduleTimeout() // fires after 1000\n//\nclass Timer {\n  constructor(callback, timerCalc){\n    this.callback  = callback\n    this.timerCalc = timerCalc\n    this.timer     = null\n    this.tries     = 0\n  }\n\n  reset(){\n    this.tries = 0\n    clearTimeout(this.timer)\n  }\n\n  // Cancels any previous scheduleTimeout and schedules callback\n  scheduleTimeout(){\n    clearTimeout(this.timer)\n\n    this.timer = setTimeout(() => {\n      this.tries = this.tries + 1\n      this.callback()\n    }, this.timerCalc(this.tries + 1))\n  }\n}\n","function isLinkToSubmitParent(element) {\n  var isLinkTag = element.tagName === 'A';\n  var shouldSubmitParent = element.getAttribute('data-submit') === 'parent';\n\n  return isLinkTag && shouldSubmitParent;\n}\n\nfunction didHandleSubmitLinkClick(element) {\n  while(element && element.getAttribute) {\n    if(isLinkToSubmitParent(element)) {\n      var message = element.getAttribute('data-confirm');\n      if (message === null || confirm(message)) {\n        element.parentNode.submit();\n      };\n      return true;\n    } else {\n      element = element.parentNode;\n    }\n  }\n  return false;\n}\n\n// for links with HTTP methods other than GET\nwindow.addEventListener('click', function (event) {\n  if(event.target && didHandleSubmitLinkClick(event.target)) {\n    event.preventDefault();\n    return false;\n  }\n}, false);\n","// Brunch automatically concatenates all files in your\n// watched paths. Those paths can be configured at\n// config.paths.watched in \"brunch-config.js\".\n//\n// However, those files will only be executed if\n// explicitly imported. The only exception are files\n// in vendor, which are never wrapped in imports and\n// therefore are always executed.\n\n// Import dependencies\n//\n// If you no longer want to use a dependency, remember\n// to also remove its path from \"config.paths.watched\".\nimport \"deps/phoenix_html/web/static/js/phoenix_html\"\n\n// Import local files\n//\n// Local files can be imported directly using relative\n// paths \"./socket\" or full ones \"web/static/js/socket\".\n\nimport socket from \"./socket\"\n","// NOTE: The contents of this file will only be executed if\n// you uncomment its entry in \"web/static/js/app.js\".\n\n// To use Phoenix channels, the first step is to import Socket\n// and connect at the socket path in \"lib/my_app/endpoint.ex\":\nimport {Socket} from \"deps/phoenix/web/static/js/phoenix\"\n\nlet socket = new Socket(\"/socket\", {params: {token: window.userToken}})\nsocket.connect()\n\nlet getByClass = function(css) {\n  return document.getElementsByClassName(css)[0]\n}\n\n// Now that you are connected, you can join channels with a topic:\nlet channel = socket.channel(\"roomba\", {})\nchannel.join()\n  .receive(\"ok\", resp => {\n    document.getElementById(\"forward\").addEventListener(\"mousedown\", _event => {\n      console.log(\"forward\")\n      channel.push(\"drive\", {velocity: 100, radius: 0})\n    })\n    document.getElementById(\"backward\").addEventListener(\"mousedown\", _event => {\n      console.log(\"backward\")\n      channel.push(\"drive\", {velocity: -100, radius: 0})\n    })\n    document.getElementById(\"left\").addEventListener(\"mousedown\", _event => {\n      console.log(\"left\")\n      channel.push(\"drive\", {velocity: 100, radius: 10})\n    })\n    document.getElementById(\"right\").addEventListener(\"mousedown\", _event => {\n      console.log(\"right\")\n      channel.push(\"drive\", {velocity: 100, radius: -10})\n    })\n    document.getElementById(\"reset\").addEventListener(\"click\", _event => {\n      console.log(\"reset\")\n      channel.push(\"reset\", {})\n    })\n    document.getElementById(\"safe\").addEventListener(\"click\", _event => {\n      console.log(\"safe\")\n      channel.push(\"safe\", {})\n    })\n    document.getElementById(\"position_reset\").addEventListener(\"click\", _event => {\n      console.log(\"position reset\")\n      channel.push(\"position_reset\", {})\n    })\n    document.addEventListener(\"mouseup\", function(ev){\n      console.log(\"stop!\")\n      channel.push(\"drive\", {velocity: 0, radius: 0})\n    })\n    console.log(\"Joined successfully\", resp)\n  }).receive(\"error\", resp => { console.log(\"Unable to join\", resp) })\n\nchannel.on(\"sensor_update\", sensors => {\n  getByClass(\"battery_capacity\").textContent = sensors.battery_capacity;\n  getByClass(\"battery_charge\").textContent = sensors.battery_charge;\n  getByClass(\"bumper_left\").setAttribute(\"fill\", sensors.bumper_left == 0 ? \"black\" : \"red\")\n  getByClass(\"bumper_right\").setAttribute(\"fill\", sensors.bumper_right == 0 ? \"black\" : \"red\")\n  getByClass(\"light_bumper_left\").setAttribute(\"display\", sensors.light_bumper_left == 0 ? \"none\" : \"block\")\n  getByClass(\"light_bumper_left_front\").setAttribute(\"display\", sensors.light_bumper_left_front == 0 ? \"none\" : \"block\")\n  getByClass(\"light_bumper_left_center\").setAttribute(\"display\", sensors.light_bumper_left_center == 0 ? \"none\" : \"block\")\n  getByClass(\"light_bumper_right\").setAttribute(\"display\", sensors.light_bumper_right == 0 ? \"none\" : \"block\")\n  getByClass(\"light_bumper_right_front\").setAttribute(\"display\", sensors.light_bumper_right_front == 0 ? \"none\" : \"block\")\n  getByClass(\"light_bumper_right_center\").setAttribute(\"display\", sensors.light_bumper_right_center == 0 ? \"none\" : \"block\")\n})\n\nchannel.on(\"position_update\", position => {\n  getByClass(\"position_x\").textContent = position.x.toFixed(1);\n  getByClass(\"position_y\").textContent = position.y.toFixed(1);\n  getByClass(\"position_heading\").textContent = position.heading.toFixed(1);\n})\n\nexport default socket\n"]}